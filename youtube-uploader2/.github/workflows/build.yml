name: Build YouTube Uploader

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/youtube-uploader2

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./youtube-uploader2
        file: ./youtube-uploader2/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Create deployment package
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p deployment-package
        cp docker-compose.yml deployment-package/
        cp docker-compose.prod.yml deployment-package/ 2>/dev/null || echo "docker-compose.prod.yml not found, skipping"
        cp nginx.conf deployment-package/ 2>/dev/null || echo "nginx.conf not found, skipping"
        cp .env.example deployment-package/ 2>/dev/null || echo ".env.example not found, skipping"
        cp deploy.sh deployment-package/ 2>/dev/null || echo "deploy.sh not found, skipping"
        cp README.md deployment-package/ 2>/dev/null || echo "README.md not found, skipping"
        
        # Create version file
        echo "VERSION=${{ steps.meta.outputs.version }}" > deployment-package/VERSION
        echo "IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> deployment-package/VERSION
        echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> deployment-package/VERSION
        echo "COMMIT_SHA=${{ github.sha }}" >> deployment-package/VERSION

    - name: Upload deployment package
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment-package/
        retention-days: 30
